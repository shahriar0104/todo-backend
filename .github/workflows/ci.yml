# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  container:
    runs-on: ubuntu-latest
#    services:
#      mssql:
#        image: mcr.microsoft.com/mssql/server:2019-latest
#        env:
#          SA_PASSWORD: "centre963~"
#          ACCEPT_EULA: "Y"
#          MSSQL_AGENT_ENABLED: "true"
#        ports:
#          - "1433:1433"
#        options:
#          --name msql1
#          -h localhost

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO --delete"
#          SOURCE: "/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
#          EXCLUDE: "/.next/, /node_modules/"

      - name: Run via ssh
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            ls -a
            cd work/todo-backend/
            chmod -R 755 *
            ./mvnw clean install -Djar.finalName=todo-backend-docker -DskipTests
            docker build -t todo-backend-docker.jar .
            docker rm -f todo-backend
            docker run -d --name todo-backend -e DB_USER=sa -e DB_PASS=toor0104~ -e SERVICE_PORT=5019 -p 5019:5019 --add-host=host.docker.internal:host-gateway todo-backend-docker.jar .
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          privateKey: ${{ secrets.SERVER_SSH_KEY }}

#      - name: create db
#        run: |
#          ls
#          docker exec -i msql1 /opt/mssql-tools/bin/sqlcmd -S mssql -U sa -P centre963~ -d master -Q "CREATE DATABASE [todo]"
#        env:
#          DB_USER: sa
#          DB_PASS: centre963~
#      - name: Set up Maven
#        uses: stCarolas/setup-maven@v4.2
#        with:
#          maven-version: 3.8.2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'adopt'
#          cache: maven
#      - name: Build with Maven
#        run: mvn -B test --file pom.xml
